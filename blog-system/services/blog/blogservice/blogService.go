// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: blog.proto

package blogservice

import (
	"context"

	"blog-system/services/blog/blog"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreatePostRequest  = blog.CreatePostRequest
	CreatePostResponse = blog.CreatePostResponse
	DeletePostRequest  = blog.DeletePostRequest
	DeletePostResponse = blog.DeletePostResponse
	GetPostRequest     = blog.GetPostRequest
	GetPostResponse    = blog.GetPostResponse
	ListPostsRequest   = blog.ListPostsRequest
	ListPostsResponse  = blog.ListPostsResponse
	UpdatePostRequest  = blog.UpdatePostRequest
	UpdatePostResponse = blog.UpdatePostResponse

	BlogService interface {
		CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error)
		GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error)
		ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error)
		UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error)
		DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error)
	}

	defaultBlogService struct {
		cli zrpc.Client
	}
)

func NewBlogService(cli zrpc.Client) BlogService {
	return &defaultBlogService{
		cli: cli,
	}
}

func (m *defaultBlogService) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultBlogService) GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.GetPost(ctx, in, opts...)
}

func (m *defaultBlogService) ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.ListPosts(ctx, in, opts...)
}

func (m *defaultBlogService) UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.UpdatePost(ctx, in, opts...)
}

func (m *defaultBlogService) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error) {
	client := blog.NewBlogServiceClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}
