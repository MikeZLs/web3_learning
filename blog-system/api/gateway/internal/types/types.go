// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type CommentInfo struct {
	Id        int64  `json:"id"`
	Content   string `json:"content"`
	UserId    int64  `json:"user_id"`
	PostId    int64  `json:"post_id"`
	CreatedAt string `json:"created_at"`
}

type CreateCommentReq struct {
	PostId  int64  `json:"post_id" validate:"required"`
	Content string `json:"content" validate:"required"`
}

type CreateCommentResp struct {
	Id      int64  `json:"id"`
	Message string `json:"message"`
}

type CreatePostReq struct {
	Title   string `json:"title" validate:"required,min=1,max=255"`
	Content string `json:"content" validate:"required"`
}

type CreatePostResp struct {
	Id      int64  `json:"id"`
	Message string `json:"message"`
}

type DeletePostReq struct {
	Id int64 `path:"id"`
}

type DeletePostResp struct {
	Message string `json:"message"`
}

type GetPostReq struct {
	Id int64 `path:"id"`
}

type ListCommentsReq struct {
	PostId   int64 `path:"post_id"`
	Page     int32 `form:"page,default=1"`
	PageSize int32 `form:"page_size,default=10"`
}

type ListCommentsResp struct {
	Comments []CommentInfo `json:"comments"`
	Total    int64         `json:"total"`
}

type ListPostsReq struct {
	Page     int32 `form:"page,default=1"`
	PageSize int32 `form:"page_size,default=10"`
}

type ListPostsResp struct {
	Posts []PostInfo `json:"posts"`
	Total int64      `json:"total"`
}

type LoginReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
}

type LoginResp struct {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type PostInfo struct {
	Id        int64  `json:"id"`
	Title     string `json:"title"`
	Content   string `json:"content"`
	UserId    int64  `json:"user_id"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type RegisterReq struct {
	Username string `json:"username" validate:"required,min=3,max=50"`
	Password string `json:"password" validate:"required,min=6"`
	Email    string `json:"email" validate:"required,email"`
}

type RegisterResp struct {
	Id      int64  `json:"id"`
	Message string `json:"message"`
}

type UpdatePostReq struct {
	Id      int64  `path:"id"`
	Title   string `json:"title" validate:"required,min=1,max=255"`
	Content string `json:"content" validate:"required"`
}

type UpdatePostResp struct {
	Message string `json:"message"`
}
